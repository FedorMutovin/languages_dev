x-app-api: &api
  build:
    context: ../languages_api/.dockerdev
    args:
      RUBY_VERSION: '3.3.0'
      PG_MAJOR: '16'
  image: languages-api:1.0.0
  environment: &env
    RAILS_ENV: ${RAILS_ENV:-development}
  tmpfs:
    - /tmp
    - /app/tmp/pids

x-backend: &backend
  <<: *api
  stdin_open: true
  tty: true
  volumes:
    - ../languages_api:/app:cached
    - bundle:/usr/local/bundle
    - rails_cache:/app/tmp/cache
    - history:/usr/local/hist
    - ../languages_api/.dockerdev/.psqlrc:/root/.psqlrc:ro
    - ../languages_api/.dockerdev/.bashrc:/root/.bashrc:ro
  environment: &backend_environment
    <<: *env
    REDIS_URL: redis://redis:6379/
    DATABASE_URL: postgres://postgres:postgres@postgres:5432
    MALLOC_ARENA_MAX: 2
    WEB_CONCURRENCY: ${WEB_CONCURRENCY:-1}
    BOOTSNAP_CACHE_DIR: /usr/local/bundle/_bootsnap
    XDG_DATA_HOME: /app/tmp/caches
    HISTFILE: /usr/local/hist/.bash_history
    PSQL_HISTFILE: /usr/local/hist/.psql_history
    IRB_HISTFILE: /usr/local/hist/.irb_history
    ACTION_CABLE_ADAPTER: ${ACTION_CABLE_ADAPTER:-anycable}
    ANYCABLE_RPC_HOST: 0.0.0.0:50051
    ANYCABLE_BROADCAST_ADAPTER: http
    ANYCABLE_HTTP_BROADCAST_URL: http://ws:8090/_broadcast
    EDITOR: vi
    LOG: ${LOG:-0}
  depends_on: &backend_depends_on
    postgres:
      condition: service_healthy
    redis:
      condition: service_healthy

services:
  rails:
    <<: *backend
    command: bundle exec rails

  web:
    <<: *backend
    command: bundle exec rails server -b 0.0.0.0
    ports:
      - '3000:3000'
    depends_on:
      <<: *backend_depends_on
      ws:
        condition: service_started
      anycable:
        condition: service_started

  ws: &ws
    image: anycable/anycable-go:1.5
    ports:
      - '8080:8080'
    environment: &ws_environment
      ANYCABLE_HOST: "0.0.0.0"
      ANYCABLE_PORT: 8080
      ANYCABLE_REDIS_URL: redis://redis:6379/0
      ANYCABLE_RPC_HOST: anycable:50051
      ANYCABLE_BROADCAST_ADAPTER: http
      ANYCABLE_PUBSUB: redis
      ANYCABLE_BROKER: memory
      ANYCABLE_DEBUG: ${ANYCABLE_DEBUG:-1}
    depends_on:
      redis:
        condition: service_healthy

  anycable:
    <<: *backend
    command: bundle exec anycable
    environment:
      <<: *backend_environment
      ANYCABLE_REDIS_URL: redis://redis:6379/0
      ANYCABLE_RPC_HOST: 0.0.0.0:50051
      ANYCABLE_DEBUG: ${ANYCABLE_DEBUG:-1}
    ports:
      - '50051'
    depends_on:
      <<: *backend_depends_on
      ws:
        condition: service_started

  sidekiq:
    <<: *backend
    command: bundle exec sidekiq -C config/sidekiq.yml

  postgres:
    image: postgres:16
    volumes:
      - .psqlrc:/root/.psqlrc:ro
      - postgres:/var/lib/postgresql/data
      - history:/user/local/hist
    environment:
      PSQL_HISTFILE: /user/local/hist/.psql_history
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432
    healthcheck:
      test: pg_isready -U postgres -h 127.0.0.1
      interval: 5s

  redis:
    image: redis:7.0-alpine
    volumes:
      - redis:/data
    ports:
      - 6379
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 3s
      retries: 30

volumes:
  bundle:
  history:
  rails_cache:
  postgres:
  redis: